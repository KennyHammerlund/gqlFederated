{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.js","webpack:///./src/server.js","webpack:///external \"@apollo/federation\"","webpack:///external \"@apollo/gateway\"","webpack:///external \"apollo-server\"","webpack:///external \"babel-runtime/helpers/classCallCheck\"","webpack:///external \"babel-runtime/helpers/taggedTemplateLiteral\"","webpack:///external \"graphql-import\"","webpack:///external \"graphql-tag\"","webpack:///external \"lodash\""],"names":["typeDefs","gql","resolvers","Query","me","id","username","User","__resolveReference","user","fetchUserById","PORT","process","env","server","ApolloServer","context","Context","req","formatError","err","message","startsWith","AuthenticationError","replace","playground","subscriptions","gateway","ApolloGateway","serviceList","name","url","listen","port","then","console","log","request","headers","connection","deviceId","deviceid"],"mappings":"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","file":"server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import server from './server'","import { importSchema } from \"graphql-import\";\nimport { ApolloServer, AuthenticationError } from \"apollo-server\";\nimport _ from \"lodash\";\nimport { ApolloGateway, RemoteGraphQLDataSource } from \"@apollo/gateway\";\nimport { buildFederatedSchema } from \"@apollo/federation\";\nimport gql from \"graphql-tag\";\n\nconst typeDefs = gql`\n  type Query {\n    me: User\n  }\n\n  type User @key(fields: \"id\") {\n    id: ID!\n    username: String\n  }\n`;\n\nconst resolvers = {\n  Query: {\n    me() {\n      return { id: \"1\", username: \"@ava\" };\n    }\n  },\n  User: {\n    __resolveReference(user, { fetchUserById }) {\n      return fetchUserById(user.id);\n    }\n  }\n};\n\n// not required but can be useful if you run multiple servers.\nconst PORT = process.env.PORT || 2999;\n\nconst server = new ApolloServer({\n  context: req => new Context(req),\n  formatError: err => {\n    if (err.message.startsWith(\"Context creation failed: \")) {\n      return new AuthenticationError(\n        err.message.replace(\"Context creation failed: \", \"\")\n      );\n    }\n    return err;\n  },\n  playground: true,\n  // needed as subscriptions are not available through federated. you can subscribe directly to the\n  // server that is providing the subscription or in a layer like redis.\n  subscriptions: false,\n  gateway: new ApolloGateway({\n    serviceList: [\n      { name: \"account\", url: \"http://localhost:2990/graphql\" },\n      { name: \"blog\", url: \"http://localhost:2995/graphql\" }\n    ]\n  })\n});\n\n// Start accepting connections.\nserver.listen({ port: PORT }).then(({ url }) => {\n  console.log(`ðŸš€ Apollo server running on port ${url}`);\n});\n\nclass Context {\n  constructor(request) {\n    const headers = request.req\n      ? request.req.headers\n      : request.connection.context;\n    this.user = headers && headers.user;\n    this.request = request.req;\n\n    this.deviceId =\n      headers && headers.deviceid && headers.deviceid.replace(/[.\\#\\$]/g, \"-\");\n  }\n}\n","module.exports = require(\"@apollo/federation\");","module.exports = require(\"@apollo/gateway\");","module.exports = require(\"apollo-server\");","module.exports = require(\"babel-runtime/helpers/classCallCheck\");","module.exports = require(\"babel-runtime/helpers/taggedTemplateLiteral\");","module.exports = require(\"graphql-import\");","module.exports = require(\"graphql-tag\");","module.exports = require(\"lodash\");"],"sourceRoot":""}