{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/graphs/account/resolvers.js","webpack:///./src/graphs/account/schema.graphql","webpack:///./src/graphs/application/resolvers.js","webpack:///./src/graphs/application/schema.graphql","webpack:///./src/graphs/resolvers.js","webpack:///./src/graphs/schema.js","webpack:///./src/index.js","webpack:///./src/server.js","webpack:///external \"@apollo/federation\"","webpack:///external \"apollo-server\"","webpack:///external \"babel-runtime/helpers/asyncToGenerator\"","webpack:///external \"babel-runtime/helpers/taggedTemplateLiteral\"","webpack:///external \"babel-runtime/regenerator\"","webpack:///external \"graphql-tag\"","webpack:///external \"jsonwebtoken\"","webpack:///external \"lodash\"","webpack:///external \"merge-graphql-schemas\""],"names":["Query","account","obj","ctx","input","token","jwt","sign","name","displayname","displayName","accountApplication","accountOnline","application","mergedDefs","gql","mergeTypes","typeDefs","test","_","reduce","resolvers","prev","next","merge","PORT","process","env","server","ApolloServer","schema","buildFederatedSchema","playground","listen","port","then","url","console","log"],"mappings":"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","file":"server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import jwt from \"jsonwebtoken\";\n\nexport default {\n  Query: {\n    account: async (obj, { input }, ctx) => {\n      return {\n        token: jwt.sign({ name: input.displayname }, \"gqlFederated\"),\n        displayName: input.displayName\n      };\n    }\n  }\n};\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"ScalarTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Date\"},\"directives\":[]},{\"kind\":\"ScalarTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"DateTime\"},\"directives\":[]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Query\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"account\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"AccountInput\"}}},\"directives\":[]}],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Account\"}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Account\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ID\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"displayName\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"token\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}]},{\"kind\":\"InputObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"AccountInput\"},\"directives\":[],\"fields\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"displayName\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}]}],\"loc\":{\"start\":0,\"end\":201}};\n    doc.loc.source = {\"body\":\"\\nscalar Date\\nscalar DateTime\\n\\ntype Query {\\n  account(input: AccountInput!): Account\\n}\\n\\ntype Account {\\n  id: ID!\\n  displayName: String!\\n  token: String!\\n}\\n\\ninput AccountInput {\\n  displayName: String!\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n      module.exports = doc;\n    \n","export default {\n  Query: {\n    accountApplication: async (obj, { input }, ctx) => {\n      return {\n        accountOnline: true\n      };\n    }\n  }\n};\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Query\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"accountApplication\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"AccountApplication\"}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"AccountApplication\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"accountOnline\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Boolean\"}},\"directives\":[]}]}],\"loc\":{\"start\":0,\"end\":109}};\n    doc.loc.source = {\"body\":\"type Query{\\n  accountApplication: AccountApplication\\n}\\n\\ntype AccountApplication {\\n  accountOnline: Boolean\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n      module.exports = doc;\n    \n","export { default as application } from \"./application/resolvers\";\nexport { default as account } from \"./account/resolvers\";\n","import application from \"./application/schema.graphql\";\nimport account from \"./account/schema.graphql\";\n\nexport default [application, account];\n","import server from './server'","import { ApolloServer } from \"apollo-server\";\nimport _ from \"lodash\";\n\n// Needed to create a federationready schema.\nimport { buildFederatedSchema } from \"@apollo/federation\";\nimport gql from \"graphql-tag\";\nimport * as resolvers from \"./graphs/resolvers\";\nimport { mergeTypes } from \"merge-graphql-schemas\";\nimport typeDefs from \"./graphs/schema\";\n\n// use of graphql-tag/loader in webpack + merge-graphjql-schemas tocreated a typedef\n// ready to use in federated schema\nconst mergedDefs = gql`\n  ${mergeTypes(typeDefs)}\n`;\n\nconst test = _.reduce(resolvers, (prev, next) => _.merge(prev, next));\n\nconst PORT = process.env.PORT || 2995;\nconst server = new ApolloServer({\n  schema: buildFederatedSchema([\n    {\n      typeDefs: mergedDefs,\n      resolvers: test\n    }\n  ]),\n  playground: true\n});\n\n// Start accepting connections.\nserver.listen({ port: PORT }).then(({ url }) => {\n  console.log(`🚀 Account server running on port ${url}`);\n});\n","module.exports = require(\"@apollo/federation\");","module.exports = require(\"apollo-server\");","module.exports = require(\"babel-runtime/helpers/asyncToGenerator\");","module.exports = require(\"babel-runtime/helpers/taggedTemplateLiteral\");","module.exports = require(\"babel-runtime/regenerator\");","module.exports = require(\"graphql-tag\");","module.exports = require(\"jsonwebtoken\");","module.exports = require(\"lodash\");","module.exports = require(\"merge-graphql-schemas\");"],"sourceRoot":""}